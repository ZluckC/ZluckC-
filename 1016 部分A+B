正整数 A 的“D 
A（为 1 位整数）部分”定义为由 A 中所有 D A组成的新整数 P 
A。例如：给定 A=3862767，D A=6，则 A 的“6 部分”P A是 66，因为 A 中有 2 个 6。
现给定 A、D A、B、D 
B，请编写程序计算 P A+P B。
输入格式：
输入在一行中依次给出 A、D 
A、B、D 
B，中间以空格分隔，其中 0<A,B<10 的9次方。

输出格式：
在一行中输出 P A+P B的值。

输入样例 1：
3862767 6 13530293 3
输出样例 1：
399
输入样例 2：
3862767 1 13530293 8
输出样例 2：
0
代码：
import java.util.*;
public class Main {
	//前者为输入的数字 后者为单个字符 
	static  int show(char x[],char y[])
	{
		int o = 0;
		for(int i = 0; i<x.length; i++)
		{
			if(x[i]==y[0])
			{
				o*=10;
				o+=x[i]-'0';
			}
		}
		return o;
	}

public static void show_1(int x[])
{
	System.out.print("hear");
}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner in = new Scanner(System.in);
		//创建字符串变量，由输入int-->String
		String s = String.valueOf(in.nextInt());
		String m = String.valueOf(in.nextInt());
		//再由String-->char
		char y []= m.toCharArray(); 
		char x []= s.toCharArray(); 
		//自定义方法
		int q = show( x ,y );
		String u = String.valueOf(in.nextInt());
		String n = String.valueOf(in.nextInt());
		char Y []= u.toCharArray(); 
		char X []= n.toCharArray(); 
		int o = show(Y,X);
		//累加输出
		System.out.print(q+o);
	}

}
