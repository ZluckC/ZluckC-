import java.util.Arrays;
import java.util.Scanner;

/*
给定数字 0-9 各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意 0 不能做首位）。
例如：给定两个 0，两个 1，三个 5，一个 8，我们得到的最小的数就是 10015558。

现给定数字，请编写程序输出能够组成的最小的数。

输入格式：
输入在一行中给出 10 个非负整数，顺序表示我们拥有数字 0、数字 1、……数字 9 的个数。
整数间用一个空格分隔。10 个数字的总个数不超过 50，且至少拥有 1 个非 0 的数字。

输出格式：
在一行中输出能够组成的最小的数。

输入样例：
2 2 0 0 0 3 0 0 1 0
输出样例：
10015558
 */
class Main{
    public static final int Max = 10;
    public static void main(String[] args) {
        //创建输入流
        Scanner in = new Scanner(System.in);

        //创建数组来保存数据
        int[] number = new int[Max];

        // 将数组所有元素初始化为0
        Arrays.fill(number, 0);

        //依次读入数据
        for (int i = 0; i < number.length; i++) {
             number[i] = in.nextInt();;
        }
        in.close();
//        2 2 0 0 0 3 0 0 1 0
        String [] str = new String[]{"0","1","2","3","4","5","6","7","8","9"};

        StringBuffer numberstr = new StringBuffer();
        //找到非0最小数放在开头位置
        for (int i = 1; i < number.length; i++) {
            if (number[i] > 0){
                numberstr.append(str[i]);
                number[i]--;
                break;
            }
        }

        //依次将剩下的数字添加在后面
        for (int i = 0; i < number.length; i++) {
            for (int j = 0; j < number[i]; j++) {
                numberstr.append(str[i]);
            }
        }
        System.out.print(numberstr);
    }
}
