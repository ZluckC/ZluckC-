大侦探福尔摩斯接到一张奇怪的字条：

我们约会吧！ 
3485djDkxh4hhGE 
2984akDfkkkkggEdsb 
s&hgsfdk 
d&Hyscvnm
大侦探很快就明白了，字条上奇怪的乱码实际上就是约会的时间星期四 14:04，因为前面两字符串中第 1 对相同的大写英文字母（大小写有区分）是第 4 个字母 D，代表星期四；第 2 对相同的字符是 E ，那是第 5 个英文字母，代表一天里的第 14 个钟头（于是一天的 0 点到 23 点由数字 0 到 9、以及大写字母 A 到 N 表示）；后面两字符串第 1 对相同的英文字母 s 出现在第 4 个位置（从 0 开始计数）上，代表第 4 分钟。现给定两对字符串，请帮助福尔摩斯解码得到约会的时间。

输入格式：
输入在 4 行中分别给出 4 个非空、不包含空格、且长度不超过 60 的字符串。

输出格式：
在一行中输出约会的时间，格式为 DAY HH:MM，其中 DAY 是某星期的 3 字符缩写，即 MON 表示星期一，TUE 表示星期二，WED 表示星期三，THU 表示星期四，FRI 表示星期五，SAT 表示星期六，SUN 表示星期日。题目输入保证每个测试存在唯一解。

输入样例：
3485djDkxh4hhGE 
2984akDfkkkkggEdsb 
s&hgsfdk 
d&Hyscvnm
输出样例：
THU 14:04

代码：
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		// 创建4个字符数组，通过输入字符串转变为字符数组
		char[] a1 = in.next().toCharArray();
		char[] a2 = in.next().toCharArray();
		char[] a3 = in.next().toCharArray();
		char[] a4 = in.next().toCharArray();
		String day[] = { "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN" };
		// count为判断条件 防止遇到第二个相同大写字符再次输出
		int count = 0;
		//寻找最短字符串长度做循环变量
		for (int i = 0; i < Math.min(a1.length, a2.length); i++) {

			if (a1[i] == a2[i] && (a1[i] >= 'A' && a1[i] <= 'G') && count == 0)// 寻找相同字符
			{
//				day[a1[i]-'A']-->'A'-'A'/'B'-'A'......'G'-'A'
//				结果为0-6
				System.out.print(day[a1[i] - 'A'] + " ");
				count++;
			} else if (a1[i] == a2[i] && count == 1) {
				if (a1[i] >= 'A' && a1[i] <= 'N') {
					System.out.printf("%02d:", (a1[i] - 'A' + 10));
					break;
				} else if (a1[i] >= '0' && a1[i] <= '9') {
					//a1[i]-'0'表示字符数字转换成int数字
					System.out.printf("%02d:", a1[i] - '0');
					break;
				}
			}
		}
		for (int i = 0; i < Math.min(a3.length, a4.length); i++) {
			if (a3[i] == a4[i])
			{
				if (Character.isLetter(a3[i])) {
					System.out.printf("%02d", i);
					System.exit(0);
					;
				}
			}
		}
	}
}
